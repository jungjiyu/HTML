HTML 은 하나가 아니라 여러 버전이 나온거다
	HTML1 >> HTML2 >> ... >> HTML5
		: 현재는 HTML5

HTML
	Hyper Text Markup Language	 : 웹 브라우져서 프로그래밍 언어

	HyperText 하이퍼텍스트	
		: 링크 걸린 텍스트

	Markup Language
		: 마크업이란 문법적형식을 가진 프로그래밍 언어


	: 브라우저 창에서 오른ㅉ쪽버튼-소스보기 하면 나오는게 HTML 이다

HTML 파일 만들기
	: (윈도우의 경우) 메모장에 글자 쓰고 1. 확장자를 .html 로 하고 2. 파일 형식을 텍스트 형식이 아니라 "모든 형식"으로 지정하고 3. 인코딩 형식을 UTF-8 로 지정한다
		: html 파일 클릭하면>> 파일의 내용을 웹 브라우저가 읽고 >> 웹 페이지로 만들어 내용을 표시한다

	: html 파일은 줄바꿈을 무시한다
		: 편의상 줄바꿈 해도 된다 근데 그게 html 내용으로 반영시키는 목적으로 쓰진 말아라

	

문법	
	태그 tag
		: 어떤 태그 있는지 확인하기 http://www.martinrinehart.com/frontend-engineering/engineers/html/html-tag-history.html
			: deprecated >> 없어질지 모르니까 안쓰는거 추천한단 뜻
			: obsolete >> 퇴출됬으니 절대 쓰지 말란 뜻

		: 시작태그와 닫히는 태그를 사용하여 특정 부분에 원하는 기능을 구현한다
			: 시작태그
				: <어쩌구> 
			: 닫히는 태그
				: </어쩌구>

		: 태그명 뒤에는 해당 태그의 속성을 나열함으로써 그 속성을 사용할 수 있다	
			: 문자열 값이면 "" 로 표시한다
			: 속성의 순서는 중요치 않다
			: 각 속성의 구분자는 따로 없고 띄어쓰기로 구분한다

 		: 태그 내부에는 또다른 태그가 올 수 있다
		: ~태그 아래에 쓴다 == ~태그의 내부에 쓴다
		: void element 태그 
			: 요소 자리가 빈 태그. 그러니까 뭘 샌드위치 시키진 않고 "끝태그" 없이 "시작태그" 단독으로쓴다 
		: 태그명은 대소문자를 구분하지 않지만 협업, 가독성을 위하여 대부분  소문자로 쓰는 편
		: 태그의 종류
			-1. 맨 위에 쓰는 태그 << 필수로 쓴다
				: !DOCTYPE html 
					: 문서 형식 선언
						: 어떠한 버전의 html로 작성된 파일인지 선언
					: !DOCTYPE html 은 HTML5 를 의미하고 통상 이걸 쓴다
					: DOCument TYPE

			0. head 태그와 body태그를 감싸는 태그 << 필수임
				: html
					: 파일의 시작과 끝을 나타냄
			1. 태그를 감싸는 테그 << 필수임
				(1) head
				(2) body

			2. head태그 아래의 태그 <<html 파일 초기 설정 관련. 필수는아님
				(1) title
					: "탭" 부분(url을 변경한다는게 아님)에 표시할 내용 커스텀
						: 원래 기본은 파일명임

				(2) meta
					: 속성
						1. charset
							: 인코딩 방식 설정
							ex) <meta charset="US-ASCII">
					: 참고로 meta 테그는 꺽쇄 안에 없어도 된다.

			3. body태그 아래의 태그 << 본문 내용과 관련. 필수는 아님
				(1) strong
					: 굵은 글자로 표시한다 
		
				(2) h1
					: 제목달기
					: 기본적으로 굵은글자&&줄바꾸기&&큰글자 로 설정되있다
					: h1 == heading1

				(2)h2
					: 소제목 달기
					: 기본적으로 굵은 글자&&줄바꾸기&&h1보단작은글자 로 설정되있다
					: heading2

		
				(3) a
					: 해당 부분이 링크라는걸 알려준다 << 애 혼자만으론 어디로 링크걸껀지까진 알려주지 못한다.
					: anchor 의 약자이다
					: 해당 url 에 정박되었단 뜻
					: 보통 a 혼자서 쓰진 않고 시작태그 내부의 a 뒤 한칸 띠고 뒤에 href="링크주소" 를 추가한다
						: a 태그의 속성
							1. href 
								:  값으론 링크 걸고자 하는 url 혹은 html파일명을 입력한다
									: 해당 html파일과 같은 디렉터리에 위치한 html 파일을 오픈하게 해준다
								: 각 페이지마다 똑같이 띄울 내용이라고 해서(메뉴바 같은거) 그 부분만 따로 저장해서 불러오는건 못하고 걍 각 페이지마다 그 똑같이 띄울 내용을 일일이 적어주어야한다

								: Hyper REFerence
								: ex) <a href="https://www.thequint.com/neon/social-buzz/here-are-our-favourite-donald-trump-memes-since-he-left-office"> 우하하하 </a>

							2. target
								: "_blank" 를 값으로 하면 새 창에서 해당 링크를 연다
									: target 속성을 주지 않으면 현재 페이지에서 새 창이 열린다
								: ex) <a href="https://www.thequint.com/neon/social-buzz/here-are-our-favourite-donald-trump-memes-since-he-left-office" target="_blank"> 우하하하 </a>

							3. title
								: 해당 부분에 커서를 가져다 댓을때 조그맣게 뜨는 네모박스 창을 만들 수 있다
								: ex)  <a href="https://www.thequint.com/neon/social-buzz/here-are-our-favourite-donald-trump-memes-since-he-left-office" target="_blank" tilte=":)"> 우하하하 </a>

				(4) li
					: 목차(?) 느낌 나게 정리해준다
					: 줄바꿈&&동글뱅이기호 기본이다
					: list

				(5)ul
					: 그룹핑 << 들여쓰기+줄바꿈 기능
					: ul태그끼리 접하든 중첩되든 무조건 ul태그가 적용된부분서 1번의 줄바꿈만 일어나고,  중첩되는 경우 앞에 들여쓰기 공백란이 추가된다
						: ex) 
<ul>
	<li>한식</li>
	<ul><ul>heheheh</ul></ul><ul>hehehehe</ul>
	<li>일식</li>
	<li>양식</li>
</ul>

					: 그룹핑을 여러겹으로 감싸면 내부로 갈수록 앞부분이 더 많이 띄워진다
					: UnorderedList 란 뜻 << 주로 li 와 함께 쓰인다

				(5) ol
					: 그룹핑 기능+ li의동글벵이를숫자로바꿔순차적표현을가능하게해주는기능
					: OrderedList 란 뜻 << 주로 li 와 함께 쓰인다.
					: ex
<ul>
	<li>한식</li>
		<ol>
			<li>뜰마루즉석김밥</li>
			<li>라밥</li>
			<li>김밥천국</li>
		</ol>
	<li>일식</li>
		<ol>
			<li>금화왕돈가스</li>
			<li>수제왕돈가스</li>
		</ol>
	<li>양식</li>
		<ol>
			<li>맥도날드</li>
			<li>스타벅스</li>
			<li>포케올데이</li>
		</ol>
</ul>


				(6) p
					: 단락 앞뒤 줄바꿈 시키는 태그
					: ( css 써도)줄바꿈 간격이 고정되어있다
					: paragraph . 즉 단락.

				(7) br
					: 한줄 줄바꿈 시키는 태그
						: 특이하게 시작태그만 씀 된다.(끝 태그는 딱히 안쓴다)
					: void element 태그이다
						: 내용이 없는 테그. 중간에 암것도 안쓰기 때문에 닫히는 태그 안쓰고 시작태그만 사용한다.
					: css 쓰면 줄바꿈 간격을 바꿀 수 있다
					: line-BReak


				(8) img
					: 이미지 띄우는 테그	
					: void element 태그이다
					: 속성
						src 
							: 이미지파일명을 할당받는다
							: 얘 없음 이미지 파일 못가져온다

						alt
							: 이미지가 뭐 어떠한 이유로 깨졌을때(파일이름을 잘못적었다던가) 깨진이미지이모티콘과 함께 표시할 문구	
							: 쓰는걸 추천
							: alternative text == 대안 문구

						title
							: 커서 호버 했을때 띄울 작은 문구

						width
							: 픽셀 단위로 사진의 크길 조절한다
								: height 와 같이 쓰이면 폭을 조절하게 된다.
								: height 없이 단독으로 사용하면 원본 비율 유지하면서 전체적으로 늘려지고 줄여진다
						height
							: 픽셀단위로 높이 를 조절한다
								: 비율 예쁘게 맟출 자신 없음 걍 width 로만 조절해랴
					: image


			(10) form
				: 사용자로부터 입력받은 데이터를 어디로 전송할지 경로 지정
				: 입력태그 덩어리(submit 부분 포함)를 감싸는 꼴로 사용된다
				: 속성
					action << 필수
						: 도메인 네임을 할당받아 클라이언트의 데이터거 전송될 경로를 지정한다
					method
						: 클라이언트 데이터를 전송할 방법을 할당한다. 만약 이 속성을 추가하지 않으면 디폴트로 get방식이 사용된다.
							: method 에 할당 가능한 문자열 
								1. "get" >> get 방식 채택
								2. "post" >> post 방식 채택

							: 폼을 이용하여 데이터를 전송하는 방법
								: get 방식 >>  url 뒤에 붙여서 전송하는 방식. 데이터 전송내용이 노츌되어 보안에 취약
								: post 방식 >> url로 전송 안하는 방식.  데이터 전송 내용이 노출되지 않아 그나마 안전


					encytype
						: 클라이언트로부터 파일을 전송받기 위해서 "multipart/form-data" 를 값으로 줘야됨
			(11)input
				: 사용자로부터 정보를 입력받을 수 있게 함 && 전송할 수 있게 함
					: 줄바꿈 자동으로 안됨
					: 사용자로부터 정보를 입력받게 하는 태그는 input 말고도 여러개 있지만 전송할 수 있게 하는건 input 을 거의 대부분 사용
				: void element 태그다
				: 속성
					1. type
						: 사용자로부터 입력받을 데이터의 타입을 정함
						: type 의 종류
							(1) 입력용 << 필드(=컨트롤) 이 생성됨
								1. text
									: 필드가 거기에 문자열을 입력받음. 입력중인 내용을 그대로 화면에 표시
								2.password
									: 필드가 거기에 문자열을 입력받음. 문자열을 입력받는데 입력중인 내용이 ●로 표시되어 화면에 출력됨

							(2)선택용
								: 타입을 아래 선택용으로 지정하면 반드시 value 속성을 추가해서 선택지를 선택할 시 보낼 값을 지정해주어야된다.
									: value 속성을 추가하지 않으면 디폴트론 체크박스를 체크했다는 "on" 만 들어가서 뭐라는지 알기 어렵다
									: 선택용에서 name 속성은 변수명 짓는 것 뿐 아니라 그룹핑 하는 역할 까지 한다

								1. radio
									: 제약적인(?) 동글뱅이를 생성한다. 
										: 선택지 중 하나밖에 선택을 못하게 제한됨
										: 따로 속성 더 쓰면 다중선택 가능한 동글뱅이를 만들수 있긴한데 그렇게 할거면 그냥 checkbox를 타입으로하여 생성한다
									: 그룹이 같은(name 속성 값이 같은) 동글뱅이는 동시 선택 불가해진다.(하나 누름 나머지 하나가 선택 취소 된다)

								2. checkbox
									: 그룹이 같은데도(name 속성값이 같은데도) 다중선택 가능한 체크박스 생성
									: 다중선택시 쿼리스티링 부분에 실제로 이름이 동일한 변수 여러개에 값이 들어감을 확인 가능하다 		
										ex)  http://localhost/login.php?snack=chocolate&snack=almond	


							(3) hidden field 용
								: ui 없이 서버에게 데이터를 전송하고 싶을 때 사용
								: name과 value 를 모두 사용하는 푠
							(4) 전송용
								: 어떠한 기능을 가진 버튼이 생성된다.
								1. submit <<<<<<<필수!!!!!
									: 같은 form 태그 에 속한 태그로 사용자로부터 입력받은 내용을 전송할 수 있는 "버튼"을 생성한다. 그 버튼엔 디폴트로 "제출" 이란 문구가 붙여짐
										: 만약에 버튼의 문구를 커스터마이징 하고 싶으면 value 속성을 추가해서 거기다 원하는 문구를 적음 된다.
									: 그런데 submit 만으로는 안되는게 입력받은 데이터를 어디로 전송할지 경로 지정이 필요하다<< input에겐 전송 경로 지정하는 역할의 속성이 없다<< 따로 form 태그가 "필수적으로" 필요하다
									: 어쨌거나 form 과 action 을 써서 경로 지정하고 제출 버튼 누르면 "경로/&필드명1=입력한값1&필드명2=입력한값2..." 이런식의 형태로 보내진다


								2. button
									: 자바스크립트 내용을 실행하는 버튼을 생성한다 . 이때 버튼에 디폴트로 아무런 문구도 적혀있지 않다. 그래서 대부분 필수적으로 value 속성을 추가하는 편이다
									: 자바스크립트와 관련된 속성을 뒤에 추가시킨다

								3. reset
									: 같은 form 태그에 속한 태그에 사용자가 그간 입력했던 내용을 모두 초기화한다.  (서버 상에서 삭제한다는게 아니다. 걍 웹 상에서 입력 내용을 삭제한 다는 것)


					2. name << 필수	
						: 기본 기능>> 입력된 값에 매핑할 이름 짓는 것. 그러니까 값을 담을 변수를 만드는거라 보면 된다. 
						: 부가적인 기능 >> 타입이 입력용인 경우 같은 name 값을 가지는 탭끼리 그룹화 시킨다.

					3. value
						: type 을 뭘로 지정했느냐 따라 그 기능이 다르다
							(1) 입력용 type
								: 필드 "내부"에 기본적으로 띄울 문자열을 할당받음
								: 얜 필수는 아니다
								: 선택용 type 에서는 checked 속성이 이와 비슷한 역할을 한다
							(2) 선택용 type
								: 선택지를 선택했을떄 전송될 문자열을 할당받는다
								: 얜 필수다(전송될 값과 직접적인 연관이 있으니)
							(3) 전송용 type
								: 버튼에 표시할 문자열을 할당받는다
								: 얜 필순 아니다

					4.  checked
						: 선택용 type 에서 처음화면서 미리 선택지가 선택되있게 하는 속성
						: 별도로 값을 대입받지 않고 속성 명만 쓴다 
							ex)   <p>닭껍질튀김<input type="checkbox" name="snack" value="chickenSkin" checked ></p>

					5. id
						: 라벨과 맵핑하기 위하여 사용한다. 값으로는 고유한 문자열을 맘대로 할당하되 이 문자열은 매핑되는 라벨의 for값과 같아야된다.

			(12) textarea
				: 한줄이 아니라 여러줄을 입력받을 떄 쓴다.
					: 그러니까 여러줄을 입력받을수 있는 필드를 생성한다
				: 얘는 input과 다르게 void element태그가 아니라서 시작 끝 태그 모두 필요
					:  시작 태그, 끝 태그 사이에 문자열 입력이 가능하고, 글케 함 input 태그의 value 를 쓴 것처럼 기본적으로 필드에 띄울 문자열을 작성 가능.
						: "" 없이 쓰는거 주의
						: textarea 에는 value 라는 속성은 따로 없음 주의
				: 속성
					cols
						: 열사이즈 결정. "n"형식의 값을 할당하고 이떄 n은 n글자가 들어갈 사이즈로 설정하겠단 뜻이 됨
						ex) <textarea cols="50"></textarea>
					row
						: 행사이즈 결정 . 마찬가지로 "n" 형식의 값을 할당

					name << 필수
						: 입력받은 값을 저장할 변수의 이름 설정

			(12) select
				:  드롭다운 생성
					: ▼같은걸로 선택지 촤라락 열어볼 수 있는 게 생긴다.
				: 드롭다운의 선택지들은 따로 option 태그들로 생성하고 select 가 감싸는거임
				: 얘도 input 과 마찬가지로 마지막엔 input 의 submit으로 데이터전송+ form 태그로 감싸서 전송 경로 설정해야된다.
				: 속성 
					name <<필수
						: 선택된 값을 저장할 변수의 이름 설정
			(13) option
				: 드롭다운 선택지 생성
					: 줄바꿈 자동으로 된다
				: 태그 가운데 사용자에게 보일 선택지명(=라벨)을 적는다
				: 단독으로 씀 의미가 없고 (li 태그를 ol 써서 그룹핑 하는 것처럼) Select를 사용하여 그룹핑 해줘야된다
				: 속성
					value
						: 선택지 별로 실제로 전송될 값을 적는다
						: 필수는 아니다. 안쓰면 기본적으로는 태크 사이에 적은 선택지명으로 값이 전송된다

			(14) label
				: 시작 태그의 앞에 문자열을 적을 수 있고, 그 문자열은 필드 앞에 보여지는데 이 문자열을 라벨이라고 한다(아이디:<input type="text"> 에서 "아이디:" 를 의미). 근데 걍 저렇게 쓰면 좀 그러니까 이게 라벨이라고 확실히 표시를 해두는데 쓰인다.
					: label 을 명확히 지정하면 그 관계도 살짝 웹페이지서 나타난다.  웹페이지서 라벨로 정의된 문자열 클릭하면 자동으로 라벨과 맵핑된 필드가 깜빡거린다(선택지 타입이면 체크박스가 체크된다)
				: 근데 라벨 테그를 그냥 쓰면 해당 라벨이 어느 필드와 관련된건지 알 수 없기에 label에게 어떤 필드와 매핑될 지를 알려줘야된다
					sol1) 정말 라벨문자열만 label 태그로 묶기>> label태그에 for 속성 추가&& 매핑대상 input 태그에 id 속성 추가(for 속성값과 id 속성값은 같아야됨)
  						<p><label for="textId">아이디:</label>
  						<input id="textId" type="text" name="id" value="아이디"></p>

					sol2) 라벨문자열뿐 아니라 매핑대상 input 태그까지 같이 묶음 >> 별도로 for , id 속성값 추가할 필요 없음
    						<p><label for="pw">비밀번호:
    						<input id="pw" type="password" name="pwd" ></label></p>



				: 속성
					for 
						: input 태그와 label을 맵핑 시켜주는 속성으로, 값은 label 의 id 속성 값과 같아야한다.
			(15) table
				: 테이블을 정의
					: 포함할 tr 모두를 감싼다
  <table border="1">
<thead>
    <tr>
      <th>이름</th><th>나이</th><th>주소</th>
    </tr>
< /thead>
<tbody>
    <tr>
      <td>이길동</td><td>95</td><td>청주</td>
    </tr>
    <tr>
      <td>저길동</td><td>10</td><td>북한</td>
    </tr>
</tbody>
  </table>

				: 속성
					border 
						: 표의 테두리를 생성한다. 
						: "1"로 주면 보통 , "2" 로 주면 두껍게.
			(16) tr
				: 행을 정의	
					: 같은 행에 들어갈 td 들을 감싼다
				: table row
			(17) td 
				: 테이블 한칸 당 들어갈 요소들을 정의. 결국 열 정의
				: table data
			(18)th
				: 테이블 맨 윗칸에 들어갈 요소들 정의. 실제로 어떤 의미있는 데이터가 들어가는게 아니라 그냥 열을 정의하는데 쓰이는거라 td 랑 다른거임
					: 근데 다 td 로 써도 상관없긴 한데 이왕^^
				: table head

			(18) thead
				: 테이블의 맨 윗열 즉 무슨 항목인지 나타내는 열 로 정의함
					: 해당 tr 그룹을 감싸는 방향으로 사용
				: 웹 페이지 상에서 티나는건 없지만 가져오는 정보를 구분 할 수 있게 해줌
			(19) tbody
				: 테이블의 맨 윗 열 아래에 들어가는 열들(실제 데이터가 들어갈)로 정의함
					: 해당 tr 들을 감싸는 방향으로 사용
				: 마찬가지로 티는 안남

			(20) tfoot
				: 테이블의 맨 아랫열 에 들어갈 열을 정의함 (합계같은거 나타내는)
				
form	 폼 이란 개념					
	: 구글 폼 같은거
	: 사용자가 입력한 정보를 서버로 전송할때 사용하는 그러한 것들
	: 종류<< 일단 공통적으로 form 태그의 action속성 &&input의 submit 속성 사용한다
		1. 드롭다운 리스트 ) ▼내려서 선택지 하나 선택 << select 태그 && option 태그 사용
		2. 체크박스)  하나 또는 여러개의  선택지 선택 << checkbox 타입의 input 태그 사용
		3.  라디오) 하나의 선택지만 선택 << radio 타입의 input 태그 사용
		4. 한줄서술형) 한줄로 적음 << text 타입의 input 태그 사용
		5. 여러줄 서술형) 여러줄 적음 << textarea 태그 사용 
		6. 히든필드	 << hidden 타입의 input 태그 사용
			hidden field 히든필드 란 개념:  ui 가 따로 없이 서버로 데이터를 전송하는것.

label
	: 무언가의 이름표다 라고 알려주는 용도로 사용
	: 그러니까 input 태그 앞에 적는 문자열 을 label 이라고 한다


method
	:method 를 명시하지 않으면 기본적으론 url 뒤에 붙여서 전송되는 get 방식으로 데이터가 전송되게 된다.

파일을  전송하기 위해선 따로 php 파일 만들고 해야된다.


table 표
	이름   성별 주소
	홍길동  남 청주
	동길동  여  북한

