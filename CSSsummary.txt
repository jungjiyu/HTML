 HTML 은 웹 사이트의 내용을 작성하고, CSS 로는 웹 문서의 디자인을 구성한다
	: HTML 에서 다 해결하지 않고 굳이 CSS 로 style 결정하는 이유
		1. 웹 문서의 내용과 디자인이 구분되어 한쪽을 수정하더라도 다른쪽까지 수정 안해도 됨
		2. 반응형 웹 디자인을 가능하게 해줌
			: 반응형 웹 디자인 >> 어떤 기기로 접속하느냐 따라서 하나의 웹 문서의 레이아웃을 다르게 보여줌 

chrome 의 web developer 확장 프로그램
	: 공부하는데 도움 많이되니까 다운 받아라
		: 아예 css 를 disable 할 수 있는 등 신기한 기능이 많음
	: 그냥 f12 랑은 또 다른거임


style 이란<< 내가 봤을땐 CSS 랑 거의 동의어인것 같다. 자주 혼용됨.
	: 웹문서에서 스타일 >> HTML 문서에서 자주 사용하는 글꼴/색상/정렬 ... 등 겉모습 결정짓는거
	: 스타일 규칙 >> 속성과 값이 하나의 쌍으로 이루어지는 것. " 속성명:속성값 ; " 꼴 꼴이다
		: 대표적인 속성
			1. 색관련
				: #16진수 혹은 색이름 할당 가능
				(1) color : 글자 색 지정
				(2) background-color : 배경색 지정

			2. 공백관련
				: px 단위
				(1) padding
				(2) margin

			3. 글씨체 관련
				(1) font-style
					: 할당 가능한 값
						1. italic 

			4. 글씨 정렬 관련
				(1)  text-align
					: 할당 가능한 값
						1.center

			4. 경계관련
				(1) border
					: " 픽셀값 solid 색 " 의 형태로 쓴다

			5. 크기 관련
				(1) width
				(2) height


	: 주석 처리 /* */
		: 한줄이든 여러줄이든 다 저거로 처리한다 
		: 주의 ) .css 파일에서만 사용 가능한거다

	style sheet 스타일 시트
		: 스타일 규칙을 한눈에 확인하고 수정하기 쉽도록 한군데 묶어 놓은 것
		: 스타일 시트라고 다 .css 인건 아니다
			: 내부 스타일 시트 같은 경운 html 의 헤더 부분에 작성되는거다

	: 종류
		(1) 브라우저 기본 스타일 : 우리가 따로 CSS 설정안했을떄 브라우져가 기본적으로 사용하는 스타일 

		(2) 사용자 스타일
			1. 인라인 스타일 :  스타일을 적용할 대상에 style "속성"을 이용해 직접 표시하는 것
				: 간단한 스타일 정보의 경우 사용한다
				: style="속성명1:속성값1; 속성명2:속성값2 ; .. " 이런식으로 씀 된다
					: 속성 하나만 적용하더라도 ; 는 쓰는거다

			2. 내부 스타일 시트 : 해당 웹 문서(.html)의 <head> 내부에 <style> "태그"를 이용하여 스타일 규칙을 정리해놓은 것
				style 태그
					:  내부 형식
						선택자 { 속성1: 속성값1, 성성2: 속성값2; }
							: 선택자 >> 스타일을 어느 부분에 적용할 것인지 알려주는것
								: 자주 쓰이는 선택자 종류
									(1) * 
										: 전체 선택자 Universal selector
										: 스타일을 대상 문서의 모든 요소에 적용할 때 사용
									(2)  특정태그명
										: 타입 선택자 type selector
											: 요소 선택자 element selector , 태그 선택자 tag selector 라고도 한다
										: "특정 태그"의  "모든" "요소"에 스타일을 적용할때 사용
											:  style 을 적용한다고 할때는.  " χ 태그에 style 을 적용한다 " 가 아닌 , " χ (태그의) 요소에 style 을 적용한다" 라고 해야된다
												: 소스코드의 태그 자체에 스타일을 적용시키는게 아니라, 태그의 내용이되는 것들에 대해 스타일을 적용하는거니까
												: 태그tag 와 요소 element 의 차이점
													: 태그 >> 말 그대로 태그 그 자체 
														: ex ) <p> , </p>
													: 요소 >> 태그를 적용한 것.
														: ex) <p>안녕하세요</p>

									(3) 선택자1, 선택자2 ..
										: 그룹 선택자 group selector
										: 여러 선택자가 같은 스타일 규칙을 사용하는 경우 한꺼번에 정의 가능하다
										: 이 경우 선택자1, 선택자2 , .. 는 대게 특정태그명이다


									(3) .클래스명
										: 클래스 선택자 class selector
										: 앞에 '.' 붙이는거 주의
										: "특정" "요소" "들"에  스타일을 적용할때 사용
											: 태그의 종류 상관없이 한 문서 내부에서 여러 요소에 적용 가능하다
										: 클래스 스타일을 적용할 요소의 태그부분에 class="클래스명" 해서 해당 요소에 적용시킬 수 있다
											: 클래스 스타일 ) 클래스 선택자를 사용해 만든 스타일
											: 하나의 요소에 여러 클래스 스타일 을 동시에 적용시킬 수 있다
												: 이경우 각 클래스명은 공백으로 구분하여 쓴다
													: ex) class ="클래스명1 클래스명2"
									(4) #아이디명
										: id 선택자 id selector
										: 앞에 # 붙이는거 주의
										: "특정" "요소" 딱 "하나"에만 스타일 적용가능하게 할떄 사용
											: 태그의 종류 상관없는데, 한 문서서 딱 한 요소에만 적용 가능하다
										: 아이디 스타일을 적용할 요소의 태그 부분에 id="아이디명" 헤서 해당 요소에 적용시킬 수 있따
											: 아이디 스타일 ) id 선택자를 이용해 만든 스타일

										:  언제 사용
											1. 문서의 레이아웃 설정
											2. 요소의 식별자


							: { } >> 내부엔 스타일 규칙(정보)가 들어간다
								: 하나의 { } 내부에 여러개의 스타일 규칙이 들어갈 수 있다
								: 각 쌍이 ';' 로 구분되기 때문에 , 내부에 얼마든지 가독성 위해 엔터 쳐도 된다


			3. 외부 스타일 시트: 여러 웹 문서에서 사용할 스타일을 별도 파일(.css)로 저장해놓고, 적용시킬 웹 문서에서 <link> "태그"를 이용하여 연결시키는것.
				: css 파일엔 style 태그 없이, style 태그 내부에 들어갈 내용( 선택자 { 속성1: 속성값1, 성성2: 속성값2; } )을 걍 적어줌 된다
				: <link> 태그 
					: 현재 문서와 외부 리소스 사이의 관계를 명시한다
					: 속성
						1. rel
							: RELation 을 의미.
							: href 경로의 리소스와 현재 문서의 관계를 명시한다. 
								: 그러니까 현재 문서에서 href 경로의 외부 리소스가 어떤 역할로 쓰일지 명시한다.
								: href 경로의 파일을 사용하기 위해선 필수적으로 써줘야됨. 안그럼 적용이 안됨
							: 할당 가능한 값
							   ****(1) stylesheet >> href 경로 파일은 stylesheet 로 사용될거다
								(2) 기타
									: https://www.tcpschool.com/html-tag-attrs/link-rel

						2. href
							: 외부리소스의 경로를 명시한다
				



 
css minify, css compress  CSS소스 경량화
	: CSS 소스의 주석이나 줄 바꿈 같은거 제거하하고, 꼭 필요한 정보만 남겨서 파일을 작게 만드는것.
		: CSS 소스는 네트워크를 이용해 파일로 내려받아짐으로 되도록 파일 크기가 작은게 좋다
			: 물론 공부할땐 굳이 이렇게 할 필욘 없다
	: 인터넷에 ( css minify, css compress ) 쳐서 나오는 툴 이용함 쉽게 경량화 된다

CSS Cascading Style Sheet
	: 우선 순위가 있는 스타일 시트
		: 그러니까 CSS  ⊂ 스타일 시트
		: Cascade == 폭포처럼 흐르는 >> 그러니까 일종의 상하 관계가 있다는거
			: This means that CSS has an inherent hierarchy and styles of a higher precedence will overwrite rules of a lower precedence.
			: styling rules “cascade” down from several sources.

	: 웹 요소에 둘 이상의 스타일을 적용할 때 우선 순위에 따라 적용할 스타일을 결정한다.
	: 스타일끼리 충돌하지 않도록 막아주는 중요한 개념
	: 충돌 방지 방법
		1. 스타일 우선순위 >> 스타일 규칙의 중요도와 적용 범위 따라 우선순위가 결정되고, 이에 따라 위에서 아래로 스타일ㅇ르 적용
		2. 스타일 상속 >> 태그의 포함 ㄱ놔계에 따라 부모 요소의 스타일을 자식 요소로 , 위에서 아래로 전달함.



